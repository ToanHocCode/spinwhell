{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.name = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password didn't match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","_c","$RefreshReg$"],"sources":["D:/SignUp/frontend/src/SignupValidation.js"],"sourcesContent":["function Validation(values){\r\n    let error = {}\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n\r\n    if(values.name === \"\")\r\n    {\r\n        error.name = \"Name should not be empty\"\r\n    }else{\r\n        error.name=\"\"\r\n    }\r\n\r\n\r\n    if(values.email === \"\")\r\n    {\r\n        error.email = \"Email should not be empty\"\r\n    }else if(!email_pattern.test(values.email)){\r\n        error.email = \"Email didn't match\"\r\n    }else{\r\n        error.email=\"\"\r\n    }\r\n\r\n    if(values.password === \"\"){\r\n        error.password = \"Password should not be empty\"\r\n    }else if(!password_pattern.test(values.password)){\r\n        error.password = \"Password didn't match\"\r\n    }else{\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n}\r\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAGH,MAAM,CAACI,IAAI,KAAK,EAAE,EACrB;IACIH,KAAK,CAACG,IAAI,GAAG,0BAA0B;EAC3C,CAAC,MAAI;IACDH,KAAK,CAACG,IAAI,GAAC,EAAE;EACjB;EAGA,IAAGJ,MAAM,CAACK,KAAK,KAAK,EAAE,EACtB;IACIJ,KAAK,CAACI,KAAK,GAAG,2BAA2B;EAC7C,CAAC,MAAK,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IACvCJ,KAAK,CAACI,KAAK,GAAG,oBAAoB;EACtC,CAAC,MAAI;IACDJ,KAAK,CAACI,KAAK,GAAC,EAAE;EAClB;EAEA,IAAGL,MAAM,CAACO,QAAQ,KAAK,EAAE,EAAC;IACtBN,KAAK,CAACM,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MAAK,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAC;IAC7CN,KAAK,CAACM,QAAQ,GAAG,uBAAuB;EAC5C,CAAC,MAAI;IACDN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACvB;EACA,OAAON,KAAK;AAChB;AAACO,EAAA,GA9BQT,UAAU;AA+BnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}